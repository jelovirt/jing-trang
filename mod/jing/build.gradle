plugins {
    id("com.gradleup.shadow") version "8.3.6"
}

dependencies {
    implementation project(':util')
    implementation project(':resolver')
    implementation project(':catalog')
    implementation project(':regex')
    implementation project(':datatype')
    implementation project(':xsd-datatype')
    implementation project(':rng-parse')
    implementation project(':pattern')
    implementation project(':jaxp')
    implementation project(':rng-jaxp')
    implementation project(':rng-validate')
    implementation project(':nvdl')
    implementation project(':schematron')
    implementation project(':xerces')
    implementation project(':picl')
    implementation project(':rng-jarv')
    implementation project(':validate')
}

sourceSets {
    main {
        java {
            srcDir 'src/main'
        }
        resources {
            srcDir "build/generated/sources/resources/main"
        }
    }
    test {
        java {
            srcDir 'src/test'
        }
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com/thaiopensource/relaxng/util/Driver',
                'Class-Path': 'saxon9.jar xalan.jar isorelax.jar resolver.jar')
    }
}

shadowJar {
    archiveFileName = 'jing.jar'
//    archiveBaseName = 'jing'
//    archiveClassifier = ''
//    archiveVersion = rootProject.version
}

tasks.build {
    dependsOn shadowJar
}

jar {
    enabled = false
}

tasks.register('generateVersion') {
    def propertyFile = file("${buildDir}/generated/sources/resources/main/com/thaiopensource/relaxng/util/resources/Version.properties")

    outputs.files propertyFile

    doLast {
        propertyFile.parentFile.mkdirs()
        propertyFile.text = "version=${project.version}"
    }
}
processResources.dependsOn(generateVersion)

//    <service type="com.thaiopensource.datatype.xsd.regex.RegexEngine"/>
//    <service type="org.relaxng.datatype.DatatypeLibraryFactory"/>
//    <service type="org.iso_relax.verifier.VerifierFactoryLoader"/>
//    <service type="com.thaiopensource.validate.SchemaReaderFactory"/>
//    <service type="com.thaiopensource.validate.auto.SchemaReceiverFactory"/>
//