plugins {
    id 'java-library'
}

group = 'com.thaiopensource'

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':util')
    implementation project(':dtd-parse')
}

sourceSets {
    main {
        java {
            srcDir 'src/main'
        }
    }
    test {
        java {
            srcDir 'src/test'
        }
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com/thaiopensource/xml/dtd/app/Driver')
    }
}

tasks.register('generateServices') {
    def services = [
            'com.thaiopensource.datatype.xsd.regex.RegexEngine': [
                    'com.thaiopensource.datatype.xsd.regex.xerces2.RegexEngineImpl',
                    'com.thaiopensource.datatype.xsd.regex.java.RegexEngineImpl'
            ],
            'org.relaxng.datatype.DatatypeLibraryFactory'      : [
                    'com.thaiopensource.datatype.xsd.DatatypeLibraryFactoryImpl'
            ],
    ]

    outputs.files services.collect { entry -> file("${buildDir}/generated/sources/resources/main/META-INF/services/${entry.key}") }

    doLast {
        services.each { entry ->
            {
                def serviceFile = file("${buildDir}/generated/sources/resources/main/META-INF/services/${entry.key}")
                serviceFile.parentFile.mkdirs()
                serviceFile.text = entry.value.join('\n')
            }
        }
    }
}
processResources.dependsOn(generateServices)
